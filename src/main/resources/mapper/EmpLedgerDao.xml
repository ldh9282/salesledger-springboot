<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iyf.salesledger.dao.EmpLedgerDao">
	<resultMap type="com.iyf.salesledger.model.EmpLedger" id="empLedgerMap">
		<result property="emp_id" column="EMP_ID"/>
		<result property="emp_pool_id" column="EMP_POOL_ID"/>
		<result property="company" column="COMPANY"/>
		<result property="department" column="DEPARTMENT"/>
		<result property="assign_date" column="ASSIGN_DATE"/>
		<result property="end_date" column="END_DATE"/>
		<result property="sales_mm" column="SALES_MM"/>
		<result property="purchase_mm" column="PURCHASE_MM"/>
		<result property="sales_unit" column="SALES_UNIT"/>
		<result property="purchase_unit" column="PURCHASE_UNIT"/>
		<result property="comments" column="COMMENTS"/>
		<result property="resume_submit_date" column="RESUME_SUBMIT_DATE"/>
		<result property="resign_date" column="RESIGN_DATE"/>
		<result property="i_contract_date" column="I_CONTRACT_DATE"/>
		<result property="c_contract_date" column="C_CONTRACT_DATE"/>
		<result property="progress" column="PROGRESS"/>
		<result property="progress_reason" column="PROGRESS_REASON"/>
		<result property="del" column="DEL"/>
		<result property="site" column="SITE"/>
		<result property="client" column="CLIENT"/>
		<result property="project_name" column="PROJECT_NAME"/>
		<result property="brief" column="BRIEF"/>
	</resultMap>
	
	
	<resultMap type="map" id="t1t2map">
		<!-- emp ledger  -->
		<result property="emp_id" column="EMP_ID"/>
		<result property="company" column="COMPANY"/>
		<result property="department" column="DEPARTMENT"/>
		<result property="assign_date" column="ASSIGN_DATE" javaType="java.util.Date"/>
		<result property="end_date" column="END_DATE" javaType="java.util.Date"/>
		<result property="sales_mm" column="SALES_MM"/>
		<result property="purchase_mm" column="PURCHASE_MM"/>
		<result property="sales_unit" column="SALES_UNIT"/>
		<result property="purchase_unit" column="PURCHASE_UNIT"/>
		<result property="comments" column="COMMENTS"/>
		<result property="resume_submit_date" column="RESUME_SUBMIT_DATE" javaType="java.util.Date"/>
		<result property="resign_date" column="RESIGN_DATE" javaType="java.util.Date"/>
		<result property="i_contract_date" column="I_CONTRACT_DATE" javaType="java.util.Date"/>
		<result property="c_contract_date" column="C_CONTRACT_DATE" javaType="java.util.Date"/>
		<result property="progress" column="PROGRESS"/>
		<result property="progress_reason" column="PROGRESS_REASON"/>
		<result property="issues" column="ISSUES"/>
		<result property="site" column="SITE"/>
		<result property="client" column="CLIENT"/>
		<result property="project_name" column="PROJECT_NAME"/>
		<result property="brief" column="BRIEF"/>
		<!-- emp pool  -->
		<result property="emp_pool_id" column="EMP_POOL_ID"/>
		<result property="sourcing_manager" column="SOURCING_MANAGER"/>
		<result property="name" column="NAME"/>
		<result property="phonenumber" column="PHONENUMBER"/>
		<result property="birthdate" column="BIRTHDATE" javaType="java.util.Date"/>
		<result property="email" column="EMAIL"/>
		<result property="address" column="ADDRESS"/>
		<result property="education" column="EDUCATION"/>
		<result property="school_name" column="SCHOOL_NAME"/>
		<result property="major" column="MAJOR"/>
		<result property="career_years" column="CAREER_YEARS"/>
		<result property="career_field" column="CAREER_FIELD"/>
		<result property="career_level" column="CAREER_LEVEL"/>
		<result property="project_assign" column="PROJECT_ASSIGN"/>
		
	</resultMap>
	
	
	<select id="list" resultMap="empLedgerMap">
		SELECT /* EmpLedgerDao.list */
			*
		FROM t_emp_ledger
	</select>
	<select id="listByCompanyAndDepartment" resultMap="t1t2map">
		SELECT /* EmpLedgerDao.listByCompanyAndDepartment */
			*
		FROM t_emp_ledger t1
		INNER JOIN t_emp_pool t2
		ON t1.emp_pool_id = t2.emp_pool_id
		WHERE t1.company = #{company} and t1.department = #{department} and (t1.del != 'Y' or t1.del is null)
		ORDER BY 1 desc
	</select>
	<select id="selectOne" resultMap="empLedgerMap">
		SELECT /* EmpLedgerDao.selectOne */
			*
		FROM t_emp_ledger
		WHERE emp_id = #{emp_id}
	</select>
	
	<insert id="insert">
		INSERT INTO t_emp_ledger /* EmpLedgerDao.insert */
		(
			emp_id,
			emp_pool_id,
			company,
			department,
			assign_date,
			end_date,
			sales_mm,
			purchase_mm,
			sales_unit,
			purchase_unit,
			comments,
			resume_submit_date,
			resign_date,
			i_contract_date,
			c_contract_date,
			progress,
			progress_reason,
			issues,
			del,
			site,
			client,
			project_name,
			brief,
			system_creator,
			system_modifier,
			system_created_at,
			system_modified_at
		)
			VALUES 
		(
			DEFAULT,
			#{emp_pool_id},
			#{company}, 
			#{department}, 
			#{assign_date}, 
			#{end_date}, 
			#{sales_mm}, 
			#{purchase_mm}, 
			#{sales_unit}, 
			#{purchase_unit}, 
			#{comments}, 
			#{resume_submit_date}, 
			#{resign_date}, 
			#{i_contract_date}, 
			#{c_contract_date}, 
			#{progress}, 
			#{progress_reason}, 
			#{issues},
			'N',
			#{site},
			#{client},
			#{project_name},
			#{brief},
			#{system_creator},
			#{system_modifier},
			now(),
			now()
			
		)
		<selectKey keyProperty="emp_id" keyColumn="emp_id" order="AFTER" resultType="long">
			SELECT currval('t_emp_ledger_emp_id_seq')
		</selectKey>
	</insert>
	
	<update id="update">
		UPDATE t_emp_ledger SET /* EmpLedgerDao.update */
			emp_pool_id = #{emp_pool_id}, 
			company = #{company}, 
			department = #{department}, 
			assign_date = #{assign_date}, 
			end_date = #{end_date}, 
			sales_mm = #{sales_mm},
			purchase_mm = #{purchase_mm},
			sales_unit = #{sales_unit}, 
			purchase_unit = #{purchase_unit}, 
			comments = #{comments}, 
			resume_submit_date = #{resume_submit_date}, 
			resign_date = #{resign_date}, 
			i_contract_date = #{i_contract_date}, 
			c_contract_date = #{c_contract_date}, 
			progress = #{progress}, 
			progress_reason = #{progress_reason}, 
			issues = #{issues},
			del = 'N',
			site = #{site},
			client = #{client},
			project_name = #{project_name},
			brief = #{brief},
			system_modifier = #{system_modifier},
			system_modified_at = now()
		WHERE emp_id = #{emp_id}
	</update>
	
	<update id="updateDel">
		UPDATE t_emp_ledger SET /* EmpLedgerDao.updateDel */
			del = #{del},
			system_modifier = #{system_modifier},
			system_modified_at = now()
		WHERE emp_id = #{emp_id}
	</update>
	<update id="updateProgress">
		UPDATE t_emp_ledger SET /* EmpLedgerDao.updateDel */
			progress = #{progress}, 
			progress_reason = #{progress_reason}, 
			system_modifier = #{system_modifier},
			system_modified_at = now()
		WHERE emp_id = #{emp_id}
	</update>
	
	<select id="selectProjectYn" resultType="String">
		SELECT /* EmpLedgerDao.selectProjectYn */
			CASE 
				WHEN count(*) >= 1 THEN 'Y'
				ELSE 'N'
			END AS result
		FROM t_emp_ledger
		WHERE emp_pool_id = #{emp_pool_id} and progress in ('투입예정', '투입')
			AND company = #{company}
			AND department = #{department}
			AND site = #{site}
			AND client = #{client}
			AND project_name = #{project_name}
			AND (del = 'N' or del is null);
	</select>
	
	<select id="getMonthlyMM" resultType="map">
		SELECT
			/* EmpLedgerDao.getMonthlyMM */
			t2.emp_id,
			(
				SELECT
					CASE
						WHEN to_char(t2.assign_date, 'YYYYMM') > #{batch_month}
							THEN TRUNC(0, 3)
						WHEN to_char(t2.assign_date, 'YYYYMM') = #{batch_month} AND to_char(t2.resign_date, 'YYYYMM') = #{batch_month}
							THEN TRUNC(
									(EXTRACT(DAY FROM t2.resign_date) - (EXTRACT(DAY FROM t2.assign_date) - 1)) / 
									EXTRACT(DAY FROM (DATE_TRUNC('month', TO_DATE(#{batch_month}, 'YYYYMM')) + INTERVAL '1 month' - INTERVAL '1 day'))
								, 3)
						WHEN to_char(t2.assign_date, 'YYYYMM') = #{batch_month} AND to_char(t2.resign_date, 'YYYYMM') != #{batch_month}
							THEN 1 - TRUNC(
										(EXTRACT(DAY FROM t2.assign_date) - 1) / 
										EXTRACT(DAY FROM (DATE_TRUNC('month', TO_DATE(#{batch_month}, 'YYYYMM')) + INTERVAL '1 month' - INTERVAL '1 day'))
									, 3)
						WHEN to_char(t2.resign_date, 'YYYYMM') = #{batch_month} AND to_char(t2.assign_date, 'YYYYMM') != #{batch_month}
							THEN TRUNC(
									EXTRACT(DAY FROM t2.resign_date) / 
									EXTRACT(DAY FROM (DATE_TRUNC('month', TO_DATE(#{batch_month}, 'YYYYMM')) + INTERVAL '1 month' - INTERVAL '1 day'))
								, 3)
						WHEN to_char(t2.resign_date, 'YYYYMM') <![CDATA[ < ]]> #{batch_month} 
							THEN TRUNC(0, 3)
						ELSE TRUNC(1, 3)
					END
				
			) 자동계산mm

		FROM
			t_sales_ledger t1
			INNER JOIN t_emp_ledger t2 on t1.emp_id = t2.emp_id
			INNER JOIN t_emp_pool t3 on t2.emp_pool_id = t3.emp_pool_id
		WHERE (
				t1.del != 'Y'
				OR t1.del IS NULL
				)			
		<if test="company != null and company != ''">
		AND t2.company = #{company}
		</if>
		<if test="department != null and department != ''">
		AND t2.department = #{department}
		</if>
	</select>
	<update id="updateMonthlyMM">
		UPDATE t_emp_ledger SET /* EmpLedgerDao.updateMonthlyMM */ 
			sales_mm = TRUNC(#{sales_mm}, 3),
			purchase_mm = TRUNC(#{purchase_mm}, 3),
			system_modifier = #{system_modifier},
			system_modified_at = now()
		WHERE emp_id = #{emp_id}
	</update>
	
	<update id="updateEmpLedger">
	    UPDATE t_emp_ledger SET /* EmpLedgerDao.updateEmpLedger */
	    emp_id = #{emp_id}
	    <if test="assign_date != null">
	        , assign_date = #{assign_date} 
	    </if>
	    <if test="end_date != null">
	        , end_date = #{end_date} 
	    </if>
	    <if test="sales_mm != null">
	        , sales_mm = #{sales_mm}
	    </if>
	    <if test="purchase_mm != null">
	        , purchase_mm = #{purchase_mm}
	    </if>
	    <if test="sales_unit != null">
	        , sales_unit = #{sales_unit} 
	    </if>
	    <if test="purchase_unit != null">
	        , purchase_unit = #{purchase_unit} 
	    </if>
	    <if test="comments != null and comments != ''">
	        , comments = #{comments}
	    </if>
	    <if test="resume_submit_date != null">
	        , resume_submit_date = #{resume_submit_date} 
	    </if>
	    <if test="resign_date != null">
	        , resign_date = #{resign_date} 
	    </if>
	    <if test="i_contract_date != null">
	        , i_contract_date = #{i_contract_date} 
	    </if>
	    <if test="c_contract_date != null">
	        , c_contract_date = #{c_contract_date} 
	    </if>
	    <if test="progress != null and progress != ''">
	        , progress = #{progress} 
	    </if>
	    <if test="progress_reason != null and progress_reason != ''">
	        , progress_reason = #{progress_reason} 
	    </if>
	    <if test="issues != null and issues != ''">
	        , issues = #{issues}
	    </if>
	    <if test="site != null and site != ''">
	        , site = #{site}
	    </if>
	    <if test="client != null and client != ''">
	        , client = #{client}
	    </if>
	    <if test="project_name != null and project_name != ''">
	        , project_name = #{project_name}
	    </if>
	    <if test="brief != null and brief != ''">
	        , brief = #{brief}
	    </if>
		    , system_modifier = #{system_modifier}
		    , system_modified_at = now()
	    WHERE emp_id = #{emp_id}
	</update>
	
</mapper>